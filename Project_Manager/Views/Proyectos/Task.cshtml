
@{
    ViewBag.Title = "Task";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var Tareas = (List<Project_Manager.Services.BO.TblTareasBO>)ViewBag.TareasList;
    var Proyecto = (Project_Manager.Services.BO.TblProyectosBO)ViewBag.ProyectoObj;
}

<div class="container-fluid">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@Proyecto.NombreProyecto</h1>
    </div>

    <div class="row">
        @if (Tareas.Count != 0)
        {
            foreach (Project_Manager.Services.BO.TblTareasBO item in Tareas)
            {
                <div class="col-lg-6">
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">
                                @item.Titulo<span>|</span>
                                @switch (item.Estado)
                                {
                                    case 0:
                                        <span class="text-muted justify-content-end">|Disponible</span>
                                        break;
                                    case 1:
                                        <span class="text-muted text-right" ">|Trabajando</span>
                                        break;
                                        case 2:
                                        <span class="text-muted text-right" ">|Finalizado</span>
                                        break;
                                }
                                @if (Session["Rol"].ToString() == "Empleado" || Session["Rol"].ToString() == "Administrador")
                                {
                                    <button type="button" onclick="PropTask.evts.DeleteTask('@item.ID', '@item.Estado')" class="btn btn-danger btn-circle btn-sm float-right"><i class="fas fa-trash"></i></button>
                                    <button type="button" onclick="PropTask.evts.TakeTask('@item.ID')" class="btn btn-success btn-circle btn-sm float-right"><i class="fas fa-dolly"></i></button>
                                }
                                <a title="Tareas" href="@Url.Content(string.Format("~/Proyectos/DetallesTask?f={0}&i={1}", item.FKProyecto, item.ID))" class="btn btn-warning btn-circle btn-sm float-right"><i class="fas fa-exclamation-circle"></i></a>
                            </h6>
                        </div>
                        <div class="card-body">
                            @item.Descripcion
                        </div>
                    </div>

                </div>
            }
                            if (Session["Rol"].ToString() == "Empleado" || Session["Rol"].ToString() == "Administrador")
                            {
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Agregar nueva tarea</h6>
                    </div>
                    <div class="card-body">
                        <button type="button" onclick="PropTask.evts.openModal('@Proyecto.Folio')" class="btn btn-warning btn-circle btn-lg"><i class="fas fa-exclamation-triangle"></i></button>
                    </div>
                </div>
            }

        }
        else
                            {
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Agregar nueva tarea</h6>
                </div>
                <div class="card-body">
                    <button type="button" onclick="PropTask.evts.openModal('@Proyecto.Folio')" class="btn btn-warning btn-circle btn-lg"><i class="fas fa-exclamation-triangle"></i></button>
                </div>
            </div>
        }
    </div>
</div>


<div class="modal fade" tabindex="-1" role="dialog" id="mdlDetail">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <form id="frmCreate" class="modal-content">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="employeeStr">Nueva tarea de @Proyecto.NombreProyecto</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label>Titulo De la tarea</label>
                            <input type="text" autocomplete="off" class="form-control" name="txtTitulo" id="txtTitulo" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <div class="row col-lg-12">
                                <label asp-for="veh.modelo" class="label">Descripción</label>
                            </div>
                            <div class="row col-lg-12">
                                <textarea maxlength="250" id="mensaje" rows="4" cols="70"></textarea>
                            </div>
                            <div class="row col-lg-12">
                                <div id="contador">0/250</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer bg-whitesmoke br">
                    <button type="button" onclick="PropTask.evts.SaveTask()" class="btn btn-success"><i class="fa fa-save"></i> Agregar</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    const mensaje = document.getElementById('mensaje');
                            const contador = document.getElementById('contador');

                            mensaje.addEventListener('input', function (e) {
                                const target = e.target;
                                const longitudMax = target.getAttribute('maxlength');
                                const longitudAct = target.value.length;
                                contador.innerHTML = `${longitudAct}/${longitudMax}`;
                            });
</script>
<script src="~/Scripts/Tareas.js"></script>